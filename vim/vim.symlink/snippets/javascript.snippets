snippet strict
	"use strict";
snippet log
	console.log(${1});
snippet fn
	function(${1}) {
		${2}
	}
snippet iferr
	if (err) {
		return ${1:handle_error};
	}
snippet doc
	/**
	 * ${1}
	 */
snippet desc
	describe("${1}", ${2} => {
		${3}
	});
snippet it
	it("${1}", ${2} => {
		${3}
	});
snippet en
	end((err, res) => {
		${1}
	});
snippet react
	import React from "react";

	const `Filename()` = (${1}) => {
		return (
			${0}
		);
	};

	export default `Filename()`;
snippet reactclass
	import React from "react";

	class `Filename()` extends React.Component {
		render() {
			return (
				${0}
			);
		}
	}

	export default `Filename()`;
snippet preact
	import { h } from "preact";

	const `Filename()` = (${1}) => {
		return (
			${0}
		);
	};

	export default `Filename()`;
snippet preactclass
	import { h, Component } from "preact";

	class `Filename()` extends Component {
		render() {
			return (
				${0}
			);
		}
	}

	export default `Filename()`;
snippet ava
	import test from "ava";
snippet test
	test("${1}", t => {
		${0}
	});
snippet testa
	test("${1}", async t => {
		${0}
	});
snippet flow
	/* @flow */
snippet floww
	/* @flow weak */
snippet fc
	/*: ${1} */ ${0}
snippet fcc
	/*::
	${1}
	*/${0}
snippet impd
	import ${2} from "${1}";${0}
snippet imp
	import { ${2} } from "${1}";${0}
snippet impa
	import * as ${2} from "${1}";${0}
snippet imps
	import * as styles from "${1:./`Filename()`.styles}";${0}
snippet webpack
	const path = require("path");

	module.exports = {
		entry: "${1:./src/index.js}",
		output: {
			path: path.resolve(__dirname, "${2:dist}"),
			filename: "${3:bundle.js}"
		},
		module: {
			rules: [
				{
					test: /\.${4:js}$/,
					loader: "${5:babel-loader}"
				}
			]
		}${0}
	};
