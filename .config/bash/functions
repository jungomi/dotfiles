# vim: set filetype=sh:

# Create and change to directory
mkcd() {
  mkdir -p "$@"
  cd "$@"
}

# Open git repository in browser
browserepo() {
  local giturl=$(git config --get remote.origin.url \
                | sed -e "s/git@//g" -e "s/https:\/\///g" -e "s/git:\/\///" \
                  -e "s/:/\//g" -e "s/.git$//")

  if [[ -z "$giturl" ]]; then
    echo "ERROR: No git url found"
    return 1
  fi

  local gitbranch=$(git rev-parse --abbrev-ref HEAD)
  giturl="https://${giturl}"
  if [[ $gitbranch != "main" ]]; then
    giturl="${giturl}/tree/${gitbranch}"
  fi

  echo "${giturl}"
  open "${giturl}"
}

# Show all names listed in the SSL certificate of a domain
certnames() {
  if [ -z "${1}" ]; then
    echo "ERROR: No domain specified"
    return 1
  fi

  local request=$(openssl s_client -connect "${1}:443" < /dev/null 2>&1)
  if [[ "${request}" != *"-----BEGIN CERTIFICATE-----"* ]]; then
    echo "ERROR: No certificate found"
    return 1
  fi

  local cert=$(echo "${request}" | openssl x509 -text)
  echo "Common Name:"
  echo ""
  echo "${cert}" | grep "Subject:" | sed -e "s/^.*CN=//"
  echo ""
  echo "Subject Alternative Names:"
  echo ""
  echo "${cert}" | grep "DNS:" | sed -e "s/DNS://g" -e "s/ //g" -e "s/,/\n/g"
  return 0
}

# IP addresses
localip() {
  ip address | grep -Eo "inet (addr:)?([0-9]*\.){3}[0-9]*" \
    | grep -Eo "([0-9]*\.){3}[0-9]*" | grep -v "127.0.0.1"
}

publicip() {
  dig +short myip.opendns.com @resolver1.opendns.com
}

# Open localhost on specified port
openl() {
  open "http://localhost:$@"
}

# Clone a git repository and switch to the cloned directory
clonecd() {
  local dir
  if [[ $# -ge 2 ]]; then
    dir="$2"
  else
    dir=$(echo "$1" | sed -e 's#.*/\([^/\.]\+\)\(\.git\)\?$#\1#')
  fi
  git clone "$@" && cd "$dir"
}

# Forward port to serveo
fws() {
  ssh -R "80:localhost:$@" serveo.net
}

# Forward port to serveo
fwsa() {
  autossh -M 0 -R "80:localhost:$@" serveo.net
}

# Forward port to the host fwp
fwp() {
  local local_port="${1}"
  local remote_port="${local_port}"
  if [[ -z "${1}" ]]; then
    echo "ERROR: Must specify a port to forward"
    return 1
  fi

  if [[ $# -ge 2 ]]; then
    remote_port="${2}"
  fi
  ssh -N -R "${remote_port}:localhost:${local_port}" fwp
}

uvenv() {
  local dir="${1}"
  if [[ -z "${1}" ]]; then
    dir=".venv"
  else
    dir="${dir}/.venv"
  fi
  if [[ -n "${VIRTUAL_ENV}" ]]; then
    local abs_path=$(realpath "${dir}")
    if [[ "${abs_path}" == "${VIRTUAL_ENV}" ]]; then
      echo "Virtual environment ${VIRTUAL_ENV} is already active."
      return 0
    fi
  fi
  if [[ ! -f "${dir}/bin/activate" ]]; then
    uv venv "${dir}"
  fi
  source "${dir}/bin/activate"
  echo "Virtual environment ${dir} activated."
}
